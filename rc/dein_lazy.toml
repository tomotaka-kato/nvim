[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

[[plugins]]
repo = 'neovimhaskell/haskell-vim'
on_ft = ['haskell']

[[plugins]]
repo = 'leafgarland/typescript-vim' 
on_ft = ['typescript']

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['vue']


[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
hook_add = '''
  let g:vim_markdown_folding_disabled = 1
'''

[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_ft = ['markdown', 'pandoc.markdown', 'rmd']
build = 'cd app && yarn install'

# [[plugins]]
# repo = 'fatih/vim-go'
# on_ft = ['go']

[[plugins]]
repo = 'cakebaker/scss-syntax.vim'
on_ft = ['scss']

[[plugins]]
repo = 'sophacles/vim-processing'
on_ft = ['processing']

[[plugins]]
repo = 'dag/vim-fish'
on_ft = ['fish']

[[plugins]]
repo = 'othree/html5.vim'
on_ft = ['html']

[[plugins]]
repo = 'alvan/vim-closetag'
on_ft = ['html', 'vue']
hook_source = '''
    let g:closetag_filenames = '*.html,*.vue'
'''

[[plugins]]
repo = 'OmniSharp/omnisharp-vim'
on_ft = ['cs']
hook_source = '''
    let g:OmniSharp_server_stdio = 1
    let g:OmniSharp_server_use_mono = 1
'''


# OmniSharp用にAleを使う
[[plugins]]
repo = 'dense-analysis/ale'
on_ft = ['cs']
hook_source = '''
  source ~/.config/nvim/plugins/ale.rc.vim
  let g:ale_linters = { 'cs': ['OmniSharp'] }

'''

[[plugins]]
repo = '~/vim-plugins/apple-swift-syntax'
on_ft = ['swift']

[[plugins]]
repo = 'uiiaoo/java-syntax.vim'
on_ft = ['java']




# [[plugins]]
# repo = 'turbio/bracey.vim'
# on_ft = ['html']
# build = 'npm install --prefix server'

# [[plugins]]
# repo = 'sudar/vim-arduino-syntax'
# on_ft = ['arduino']

